name: Rust

on:
  push:
    # branches: [ master ]
    tags:
      - "v*"

jobs:
  build:
    runs-on: macos-13-arm64

    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies
        run: cargo install cargo-packager --locked

      - name: Add aarch64 target
        run: rustup target add x86_64-apple-darwin

      - name: Setup macOS Keychain for Signing
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app.keychain
          # 从 Secrets 解码证书文件
          echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12

          # 创建一个临时的、受密码保护的钥匙串
          security create-keychain -p "${{ secrets.GITHUB_TOKEN }}" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "${{ secrets.GITHUB_TOKEN }}" $KEYCHAIN_PATH

          # 将你的证书导入到临时钥匙串中
          security import certificate.p12 -k $KEYCHAIN_PATH -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -A

          # 将临时钥匙串添加到钥匙串搜索列表中
          security list-keychains -d user -s $KEYCHAIN_PATH

      - name: build aarch64
        run: cargo build --release

      - name: build x86_64
        run: cargo build --target x86_64-apple-darwin --release

      - name: Bundle for aarch64
        run: cargo packager --release

      - name: Bundle for x86_64
        run: cargo packager --target x86_64-apple-darwin --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # provided by Actions, do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true # set to true if you want the release to be a pre-release

      - name: Zip binaries
        run: |
          cd ./target/release
          zip -r ../../MessAuto_aarch64.zip MessAuto.app
          cd ../../
          cd ./target/x86_64-apple-darwin/release
          zip -r ../../../MessAuto_x86_64.zip MessAuto.app
          cd ../../../

      - name: Upload Release Asset x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: ./MessAuto_x86_64.zip
          asset_name: MessAuto_x86_64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: ./MessAuto_aarch64.zip
          asset_name: MessAuto_aarch64.zip
          asset_content_type: application/zip
